<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.sample.controller" />
	<mvc:annotation-driven />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="locations">
	    <list>
	      <!-- Default location inside war file -->
	      <value>classpath:jdbc.properties</value>
	      <!-- Environment specific location, a fixed path on server -->
		<!-- <value>file:///opt/my-app/conf/app.properties</value> -->
	    </list>
	  </property>
	  <property name="ignoreResourceNotFound" value="true"/>
	</bean>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  <property name="driverClassName" value="${jdbc.driverClassName}" />
	  <property name="url" value="${jdbc.url}" />
	  <property name="username" value="${jdbc.username}" />
	  <property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!-- 		1.Method to map hibernate files<property name="annotatedClasses"> -->
<!-- 			<list> -->
<!-- 				<value>com.sample.model.Employee</value> -->
<!-- 			</list> -->
<!-- 		</property> -->

		<property name="packagesToScan" value="com.sample.model"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
		
	<bean id="dataDao" class="com.sample.dao.DataDaoImpl"></bean>
	<bean id="dataServices" class="com.sample.services.DataServicesImpl"></bean>
	<bean class="org.dozer.spring.DozerBeanMapperFactoryBean" id="mapper" scope="singleton"> 
		<property name="mappingFiles" value="classpath*:/*mapping.xml"/> 
		<property name="customConverters"> 
			<list> 
				<bean class= "org.dozer.converters.CustomConverter"/> 
			</list>
		 </property> 
		 <property name="eventListeners"> 
		 	<list>
		 	 <bean class="org.dozer.listeners.EventListener"/> 
		 	 	</list> 
		 </property>
		  <property name="factories"> 
		  <map> <entry key="id" value-ref="bean-factory-ref"/>
		   </map> 
		   </property> 
</bean>
</beans>